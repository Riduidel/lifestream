<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ndx.lifestream</groupId>
		<artifactId>lifestream</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>my-lifestream</artifactId>
	<packaging>pom</packaging>
	<description>My very own lifestream, using all provided modules to create a valid output</description>
	<properties>
		<output.mode>jbake</output.mode>
		<!-- site.dir is configured in profiles -->
		<site.basedir>${project.build.directory}/site/generated/</site.basedir>
		<site.input>${site.basedir}/input/</site.input>
		<site.dir>${site.input}/content/</site.dir>
		<site.output>${site.basedir}/output/</site.output>
		<goodreads.dir>${site.dir}/</goodreads.dir>
		<wordpress.dir>${site.dir}/</wordpress.dir>
		<shaarli.dir>${site.dir}/</shaarli.dir>
		<site.upload.dir>lifestream/</site.upload.dir>
		<site.upload.url>ftp://ftpperso.free.fr</site.upload.url>
		<pegdown.version>1.6.0</pegdown.version>
	</properties>
	<distributionManagement>
		<repository>
			<id>ftpperso.free.fr</id>
			<url>${site.upload.url}/${site.upload.dir}/</url>
		</repository>
	</distributionManagement>
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
			</extension>
		</extensions>
		<!-- standard deploy is disabled for this plugin as I don't want to see 
			it appear anywhere. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assemblies/source-markdown.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
 			<activation>
				<property>
					<name>goodreads.mail</name>
				</property>
			</activation>
			<id>download-goodreads</id>
			<build>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>goodreads</artifactId>
						<executions>
							<execution>
								<id>download goodreads</id>
								<goals>
									<goal>goodreads</goal>
								</goals>
								<configuration>
									<mode>${output.mode}</mode>
									<output>${goodreads.dir}</output>
									<username>${goodreads.mail}</username>
									<password>${goodreads.password}</password>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
<!-- 			<activation>
				<property>
					<name>wordpress.login</name>
				</property>
			</activation>
 -->			<!-- Download content and transform it -->
			<id>download-wordpress</id>
			<build>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>wordpress</artifactId>
						<executions>
							<execution>
								<id>download wordpress</id>
								<goals>
									<goal>wordpress</goal>
								</goals>
								<configuration>
									<mode>${output.mode}</mode>
									<output>${wordpress.dir}</output>
									<username>${wordpress.login}</username>
									<password>${wordpress.password}</password>
									<site>${wordpress.address}</site>
					    			<twitterAccessToken>${twitter4j.oauth.accessToken}</twitterAccessToken>
					    			<twitterAccessTokenSecret>${twitter4j.oauth.accessTokenSecret}</twitterAccessTokenSecret>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<activation>
				<property>
					<name>shaarli.login</name>
				</property>
			</activation>
			<!-- Download content and transform it -->
			<id>download-shaarli</id>
			<build>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>shaarli</artifactId>
						<executions>
							<execution>
								<id>download shaarli</id>
								<goals>
									<goal>shaarli</goal>
								</goals>
								<configuration>
									<mode>${output.mode}</mode>
									<output>${shaarli.dir}</output>
									<username>${shaarli.login}</username>
									<password>${shaarli.password}</password>
									<address>${shaarli.address}</address>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<!-- Generate website using JBake -->
			<id>jbake</id>
			<properties>
				<output.mode>jbake</output.mode>
				<site.jbake>${site.output}/jbake/</site.jbake>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-jbake-templates</id>
								<!-- here the phase you need -->
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${site.input}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/jbake</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
			<plugin>
				<groupId>org.jbake</groupId>
				<artifactId>jbake-maven-plugin</artifactId>
				<version>0.3.2</version>
				<configuration>
					<inputDirectory>${site.input}</inputDirectory>
					<outputDirectory>${site.jbake}</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>generate_jbake</id>
						<!-- moved into compile phase to make sure files are generated before -->
						<phase>compile</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<!-- AsciiDoc content support -->
					<dependency>
			            <groupId>org.asciidoctor</groupId>
			            <artifactId>asciidoctorj</artifactId>
			            <version>1.5.8.1</version>
			        </dependency>
			        
			        <!-- Markdown content support -->
					<dependency>
						<groupId>com.vladsch.flexmark</groupId>
						<artifactId>flexmark</artifactId>
						<version>0.40.8</version>
					</dependency>
					<dependency>
						<groupId>com.vladsch.flexmark</groupId>
						<artifactId>flexmark-profile-pegdown</artifactId>
						<version>0.40.8</version>
					</dependency>
			        
			        <!-- Freemarker template support -->
			        <dependency>
            			<groupId>org.freemarker</groupId>
            			<artifactId>freemarker</artifactId>
            			<version>2.3.28</version>
        			</dependency>
        			
        			<!-- Groovy template support -->
        			<!--<dependency>
					    <groupId>org.codehaus.groovy</groupId>
					    <artifactId>groovy</artifactId>
					    <version>2.5.5</version>
					</dependency>
					<dependency>
					    <groupId>org.codehaus.groovy</groupId>
					    <artifactId>groovy-templates</artifactId>
					    <version>2.5.5</version>
					</dependency>-->
					
					<!-- Thymeleaf template support -->
					<!--<dependency>
						<groupId>org.thymeleaf</groupId>
						<artifactId>thymeleaf</artifactId>
						<version>3.0.11.RELEASE</version>
					</dependency>-->
					
					<!-- Jade4J template support -->
					<!--<dependency>
						<groupId>de.neuland-bfi</groupId>
						<artifactId>jade4j</artifactId>
						<version>1.2.7</version>
					</dependency>-->
				</dependencies>
			</plugin>					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assemblies/generated-jbake.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<!-- web.xml is not mandatory since JavaEE 5 -->
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<!-- <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors> 
								<warSourceDirectory>WebContent</warSourceDirectory> <webResources> <resource> 
								<directory>src/main/webapp2</directory> <filtering>true</filtering> </resource> 
								</webResources> -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>upload-generated-site-to-ftp</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${site.jbake}</fromDir>
									<includes>**/*</includes>
									<url>${site.upload.url}</url>
									<toDir>${site.upload.dir}</toDir>
									<serverId>ftpperso.free.fr</serverId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>